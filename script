# Setup Proxy
echo 'export {http,https,ftp}_proxy="http://172.19.1.179:3128"' >> /etc/profile




echo 'proxy=http://172.19.1.179:3128' >> /etc/yum.conf

# Set SELinux in permissive mode (effectively disabling it)
setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=disabled/' /etc/selinux/config
sudo sysctl -p


# stop firewalld
sudo systemctl stop firewalld
sudo systemctl disable firewalld
sudo systemctl mask --now firewalld
sudo sysctl -p

# Install Docker CE
## Set up the repository
### Install required packages.
yum install -y yum-utils device-mapper-persistent-data lvm2

### Add Docker repository.
yum-config-manager \
  --add-repo \
  https://download.docker.com/linux/centos/docker-ce.repo

## Install Docker CE.
#yum update -y && yum install -y docker-ce-18.06.2.ce
sudo yum update -y && yum install -y docker-ce docker-ce-cli containerd.io

# Start Docker
sudo systemctl start docker



# set docker-proxy

mkdir -p /etc/systemd/system/docker.service.d

cat > /etc/systemd/system/docker.service.d/http-proxy.conf << EOF
[Service]
Environment="HTTP_PROXY=http://172.19.1.179:3128"
Environment="HTTPS_PROXY=http://172.19.1.179:3128"
EOF

systemctl daemon-reload
systemctl restart docker

# Environment="NO_PROXY=127.0.0.1,localhost,192.168.0.0/24,10.250.0.0/48"

# set proxy for CCproxy
# cat > /etc/systemd/system/docker.service.d/http-proxy.conf << EOF
# [Service]
# Environment="HTTP_PROXY=http://172.19.1.179:808"
# Environment="HTTPS_PROXY=http://172.19.1.179:808"
# Environment="NO_PROXY=127.0.0.1,localhost,10.250.0.0/48"
# EOF

# systemctl daemon-reload
# systemctl restart docker



# Disable swap
swapoff -a
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
# Disable swap in sysctl.conf
sudo echo "vm.swappiness=0" | sudo tee --append /etc/sysctl.conf
# Apply configuration changes without reboot.
sudo sysctl -p

## Create /etc/docker directory.
mkdir /etc/docker

# Setup daemon.
cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2",
  "storage-opts": [
    "overlay2.override_kernel_check=true"
  ]
}
EOF

mkdir -p /etc/systemd/system/docker.service.d

# Restart Docker
systemctl daemon-reload
systemctl restart docker

# Install kubeadm
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF



yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

systemctl enable --now kubelet

# Restarting the kubelet is required:
systemctl daemon-reload
systemctl restart kubelet

systemctl enable docker.service



# script to clear all rancher related container
#!/bin/sh
docker rm -f $(docker ps -qa)
docker volume rm $(docker volume ls -q)
cleanupdirs="/var/lib/etcd /etc/kubernetes /etc/cni /opt/cni /var/lib/cni /var/run/calico"
for dir in $cleanupdirs; do
  echo "Removing $dir"
  sudo rm -rf $dir
done


docker run -d --restart=unless-stopped \
  -p 80:80 -p 443:443 \
  -e HTTP_PROXY="http://172.19.1.179:3128" \
  -e HTTPS_PROXY="http://172.19.1.179:3128" \
  rancher/rancher
  
  
# -e NO_PROXY="localhost,127.0.0.1,0.0.0.0,192.168.0.0/24" \
  
  sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.2.8 --server https://192.168.0.73 --token cgsfxqv28tqxl6fsws2b5kjdqvf8jhl5s4qm6qvwnflqlpcgvdxtvw --ca-checksum d0a4d6a85c562e1374d94da326f2d8f969a020f62ed962f2b89acae281eac6bf --worker